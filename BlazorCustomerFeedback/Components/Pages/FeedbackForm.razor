@using BlazorCustomerFeedback.Models
@using BlazorCustomerFeedback.Services
@inject IFeedbackService FeedbackService
@inject NavigationManager NavigationManager

<div class="container">
    <h3>Submit Feedback</h3>

    <EditForm Model="@feedback" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="feedback.Title" />
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="feedback.Description" rows="3" />
        </div>

        <div class="mb-3">
            <label for="rating" class="form-label">Rating</label>
            <InputNumber id="rating" class="form-control" @bind-Value="feedback.Rating" min="1" max="5" />
        </div>

        <div class="mb-3">
            <label for="category" class="form-label">Category</label>
            <InputSelect id="category" class="form-control" @bind-Value="feedback.Category">
                <option value="">Select a category...</option>
                <option value="Bug">Bug</option>
                <option value="Feature">Feature Request</option>
                <option value="Improvement">Improvement</option>
                <option value="Other">Other</option>
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Submit Feedback</button>
    </EditForm>
</div>

@code {
    private Feedback feedback = new();

    private async Task HandleValidSubmit()
    {
        feedback.CreatedAt = DateTime.UtcNow;
        feedback.Status = FeedbackStatus.New;

        await FeedbackService.CreateFeedbackAsync(feedback);
        NavigationManager.NavigateTo("/");
    }
}